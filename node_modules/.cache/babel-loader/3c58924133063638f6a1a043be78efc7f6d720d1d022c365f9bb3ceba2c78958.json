{"ast":null,"code":"import { createStore } from 'redux';\n\n// Define initial state\nconst initialState = {\n  category: '',\n  description: '',\n  deadline: '',\n  goals: []\n};\n\n// Action types\nexport const SET_CATEGORY = 'SET_CATEGORY';\nexport const SET_DESCRIPTION = 'SET_DESCRIPTION';\nexport const SET_DEADLINE = 'SET_DEADLINE';\nexport const ADD_GOAL = 'ADD_GOAL';\nexport const RESET_FORM = 'RESET_FORM';\n\n// Action creators\nexport const setCategory = category => ({\n  type: SET_CATEGORY,\n  payload: category\n});\nexport const setDescription = description => ({\n  type: SET_DESCRIPTION,\n  payload: description\n});\nexport const setDeadline = deadline => ({\n  type: SET_DEADLINE,\n  payload: deadline\n});\nexport const addGoal = goal => ({\n  type: ADD_GOAL,\n  payload: goal\n});\nexport const resetForm = () => ({\n  type: RESET_FORM\n});\n\n// Reducer function\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_CATEGORY:\n      return {\n        ...state,\n        category: action.payload\n      };\n    case SET_DESCRIPTION:\n      return {\n        ...state,\n        description: action.payload\n      };\n    case SET_DEADLINE:\n      return {\n        ...state,\n        deadline: action.payload\n      };\n    case ADD_GOAL:\n      return {\n        ...state,\n        goals: [...state.goals, action.payload]\n      };\n    case RESET_FORM:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\n// Create the store\nconst store = createStore(rootReducer);\nexport default store;","map":{"version":3,"names":["createStore","initialState","category","description","deadline","goals","SET_CATEGORY","SET_DESCRIPTION","SET_DEADLINE","ADD_GOAL","RESET_FORM","setCategory","type","payload","setDescription","setDeadline","addGoal","goal","resetForm","rootReducer","state","arguments","length","undefined","action","store"],"sources":["C:/Users/loucr/OneDrive/Desktop/React-Projects/Goals/react-goalmaker/src/store.js"],"sourcesContent":["import { createStore } from 'redux';\r\n\r\n// Define initial state\r\nconst initialState = {\r\n  category: '',\r\n  description: '',\r\n  deadline: '',\r\n  goals: []\r\n};\r\n\r\n// Action types\r\nexport const SET_CATEGORY = 'SET_CATEGORY';\r\nexport const SET_DESCRIPTION = 'SET_DESCRIPTION';\r\nexport const SET_DEADLINE = 'SET_DEADLINE';\r\nexport const ADD_GOAL = 'ADD_GOAL';\r\nexport const RESET_FORM = 'RESET_FORM';\r\n\r\n\r\n// Action creators\r\nexport const setCategory = (category) => ({\r\n  type: SET_CATEGORY,\r\n  payload: category,\r\n});\r\n\r\nexport const setDescription = (description) => ({\r\n  type: SET_DESCRIPTION,\r\n  payload: description,\r\n});\r\n\r\nexport const setDeadline = (deadline) => ({\r\n  type: SET_DEADLINE,\r\n  payload: deadline,\r\n});\r\n\r\nexport const addGoal = (goal) => ({\r\n  type: ADD_GOAL,\r\n  payload: goal,\r\n});\r\n\r\nexport const resetForm = () => ({\r\n  type: RESET_FORM,\r\n});\r\n\r\n// Reducer function\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CATEGORY:\r\n      return { ...state, category: action.payload };\r\n    case SET_DESCRIPTION:\r\n      return { ...state, description: action.payload };\r\n    case SET_DEADLINE:\r\n      return { ...state, deadline: action.payload };\r\n    case ADD_GOAL:\r\n      return { ...state, goals: [...state.goals, action.payload] };\r\n    case RESET_FORM:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create the store\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;;AAEnC;AACA,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,WAAW,EAAE,EAAE;EACfC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAG,cAAc;AAC1C,OAAO,MAAMC,eAAe,GAAG,iBAAiB;AAChD,OAAO,MAAMC,YAAY,GAAG,cAAc;AAC1C,OAAO,MAAMC,QAAQ,GAAG,UAAU;AAClC,OAAO,MAAMC,UAAU,GAAG,YAAY;;AAGtC;AACA,OAAO,MAAMC,WAAW,GAAIT,QAAQ,KAAM;EACxCU,IAAI,EAAEN,YAAY;EAClBO,OAAO,EAAEX;AACX,CAAC,CAAC;AAEF,OAAO,MAAMY,cAAc,GAAIX,WAAW,KAAM;EAC9CS,IAAI,EAAEL,eAAe;EACrBM,OAAO,EAAEV;AACX,CAAC,CAAC;AAEF,OAAO,MAAMY,WAAW,GAAIX,QAAQ,KAAM;EACxCQ,IAAI,EAAEJ,YAAY;EAClBK,OAAO,EAAET;AACX,CAAC,CAAC;AAEF,OAAO,MAAMY,OAAO,GAAIC,IAAI,KAAM;EAChCL,IAAI,EAAEH,QAAQ;EACdI,OAAO,EAAEI;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAGA,CAAA,MAAO;EAC9BN,IAAI,EAAEF;AACR,CAAC,CAAC;;AAEF;AACA,MAAMS,WAAW,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGpB,YAAY;EAAA,IAAEuB,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC/C,QAAQC,MAAM,CAACZ,IAAI;IACjB,KAAKN,YAAY;MACf,OAAO;QAAE,GAAGc,KAAK;QAAElB,QAAQ,EAAEsB,MAAM,CAACX;MAAQ,CAAC;IAC/C,KAAKN,eAAe;MAClB,OAAO;QAAE,GAAGa,KAAK;QAAEjB,WAAW,EAAEqB,MAAM,CAACX;MAAQ,CAAC;IAClD,KAAKL,YAAY;MACf,OAAO;QAAE,GAAGY,KAAK;QAAEhB,QAAQ,EAAEoB,MAAM,CAACX;MAAQ,CAAC;IAC/C,KAAKJ,QAAQ;MACX,OAAO;QAAE,GAAGW,KAAK;QAAEf,KAAK,EAAE,CAAC,GAAGe,KAAK,CAACf,KAAK,EAAEmB,MAAM,CAACX,OAAO;MAAE,CAAC;IAC9D,KAAKH,UAAU;MACb,OAAOT,YAAY;IACrB;MACE,OAAOmB,KAAK;EAChB;AACF,CAAC;;AAED;AACA,MAAMK,KAAK,GAAGzB,WAAW,CAACmB,WAAW,CAAC;AAEtC,eAAeM,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}